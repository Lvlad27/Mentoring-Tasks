/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 16.0 		*/
/*  Created On : 05-Oct-2022 14:57:27 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_a_owners]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [accounts] DROP CONSTRAINT [FK_a_owners]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ams_a_id]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [accounts_m2m_statuses] DROP CONSTRAINT [FK_ams_a_id]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ams_s_id]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [accounts_m2m_statuses] DROP CONSTRAINT [FK_ams_s_id]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_of_id]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [offices] DROP CONSTRAINT [FK_of_id]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_site_pages_offices]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [site_pages] DROP CONSTRAINT [FK_site_pages_offices]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_sp_parent]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [site_pages] DROP CONSTRAINT [FK_sp_parent]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ta_destination]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [transactions_archive] DROP CONSTRAINT [FK_ta_destination]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_ta_source]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [transactions_archive] DROP CONSTRAINT [FK_ta_source]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_to_destination]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [transactions_operational] DROP CONSTRAINT [FK_to_destination]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_to_source]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [transactions_operational] DROP CONSTRAINT [FK_to_source]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[accounts]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [accounts]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[accounts_m2m_statuses]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [accounts_m2m_statuses]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[offices]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [offices]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[owners]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [owners]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[site_pages]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [site_pages]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[statuses]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [statuses]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[transactions_archive]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [transactions_archive]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[transactions_operational]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [transactions_operational]
GO

/* Create Tables */

CREATE TABLE [accounts]
(
	[a_id] int NOT NULL IDENTITY (1, 1),
	[a_owner] int NOT NULL,
	[a_is_system] bit NOT NULL,
	[a_balance] money NOT NULL
)
GO

CREATE TABLE [accounts_m2m_statuses]
(
	[ams_a_id] int NOT NULL,
	[ams_s_id] tinyint NOT NULL,
	[ams_last_update] datetime NOT NULL
)
GO

CREATE TABLE [offices]
(
	[of_id] int NOT NULL IDENTITY (1, 1),
	[of_city] nvarchar(50) NULL,
	[of_name] nvarchar(50) NULL,
	[of_sales] int NULL
)
GO

CREATE TABLE [owners]
(
	[o_id] int NOT NULL IDENTITY (1, 1),
	[o_name] nvarchar(200) NOT NULL
)
GO

CREATE TABLE [site_pages]
(
	[sp_id] int NOT NULL IDENTITY (1, 1),
	[sp_parent] int NULL,
	[sp_name] nvarchar(100) NOT NULL
)
GO

CREATE TABLE [statuses]
(
	[s_id] tinyint NOT NULL IDENTITY (1, 1),
	[s_name] nvarchar(200) NOT NULL
)
GO

CREATE TABLE [transactions_archive]
(
	[ta_id] bigint NOT NULL,
	[ta_source] int NOT NULL,
	[ta_destination] int NOT NULL,
	[ta_money] money NULL,
	[ta_datetime] datetime NOT NULL
)
GO

CREATE TABLE [transactions_operational]
(
	[to_id] int NOT NULL IDENTITY (1, 1),
	[to_source] int NOT NULL,
	[to_destination] int NOT NULL,
	[to_money] money NULL,
	[to_datetime] datetime NOT NULL
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [accounts] 
 ADD CONSTRAINT [PK_a_id]
	PRIMARY KEY CLUSTERED ([a_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_a_owners] 
 ON [accounts] ([a_owner] ASC)
GO

ALTER TABLE [accounts_m2m_statuses] 
 ADD CONSTRAINT [PK_ams_a_id_s_id]
	PRIMARY KEY CLUSTERED ([ams_a_id] ASC,[ams_s_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_ams_a_id] 
 ON [accounts_m2m_statuses] ([ams_a_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_ams_s_id] 
 ON [accounts_m2m_statuses] ([ams_s_id] ASC)
GO

ALTER TABLE [offices] 
 ADD CONSTRAINT [PK_of_id]
	PRIMARY KEY CLUSTERED ([of_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_of_id] 
 ON [offices] ([of_id] ASC)
GO

ALTER TABLE [owners] 
 ADD CONSTRAINT [PK_o_id]
	PRIMARY KEY CLUSTERED ([o_id] ASC)
GO

ALTER TABLE [owners] 
 ADD CONSTRAINT [UNQ_o_name] UNIQUE NONCLUSTERED ([o_name] ASC)
GO

ALTER TABLE [site_pages] 
 ADD CONSTRAINT [PK_sp_id]
	PRIMARY KEY CLUSTERED ([sp_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_site_pages_offices] 
 ON [site_pages] ([sp_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_sp_parent] 
 ON [site_pages] ([sp_parent] ASC)
GO

CREATE UNIQUE NONCLUSTERED INDEX [UNQ_sp_name] 
 ON [site_pages] ([sp_name] ASC)
GO

ALTER TABLE [statuses] 
 ADD CONSTRAINT [PK_statuses]
	PRIMARY KEY CLUSTERED ([s_id] ASC)
GO

ALTER TABLE [transactions_archive] 
 ADD CONSTRAINT [PK_ta_id]
	PRIMARY KEY CLUSTERED ([ta_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_ta_source] 
 ON [transactions_archive] ([ta_source] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_ta_destination] 
 ON [transactions_archive] ([ta_destination] ASC)
GO

ALTER TABLE [transactions_operational] 
 ADD CONSTRAINT [PK_to_id]
	PRIMARY KEY CLUSTERED ([to_id] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_to_source] 
 ON [transactions_operational] ([to_source] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_to_destination] 
 ON [transactions_operational] ([to_destination] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [accounts] ADD CONSTRAINT [FK_a_owners]
	FOREIGN KEY ([a_owner]) REFERENCES [owners] ([o_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [accounts_m2m_statuses] ADD CONSTRAINT [FK_ams_a_id]
	FOREIGN KEY ([ams_a_id]) REFERENCES [accounts] ([a_id]) ON DELETE Cascade ON UPDATE Cascade
GO

ALTER TABLE [accounts_m2m_statuses] ADD CONSTRAINT [FK_ams_s_id]
	FOREIGN KEY ([ams_s_id]) REFERENCES [statuses] ([s_id]) ON DELETE Cascade ON UPDATE Cascade
GO

ALTER TABLE [offices] ADD CONSTRAINT [FK_of_id]
	FOREIGN KEY ([of_id]) REFERENCES [accounts] ([a_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [site_pages] ADD CONSTRAINT [FK_site_pages_offices]
	FOREIGN KEY ([sp_id]) REFERENCES [offices] ([of_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [site_pages] ADD CONSTRAINT [FK_sp_parent]
	FOREIGN KEY ([sp_parent]) REFERENCES [site_pages] ([sp_id]) ON DELETE Cascade ON UPDATE No Action
GO

ALTER TABLE [transactions_archive] ADD CONSTRAINT [FK_ta_destination]
	FOREIGN KEY ([ta_destination]) REFERENCES [accounts] ([a_id]) ON DELETE No Action ON UPDATE No Action
GO

ALTER TABLE [transactions_archive] ADD CONSTRAINT [FK_ta_source]
	FOREIGN KEY ([ta_source]) REFERENCES [accounts] ([a_id]) ON DELETE Cascade ON UPDATE Cascade
GO

ALTER TABLE [transactions_operational] ADD CONSTRAINT [FK_to_destination]
	FOREIGN KEY ([to_destination]) REFERENCES [accounts] ([a_id]) ON DELETE Cascade ON UPDATE Cascade
GO

ALTER TABLE [transactions_operational] ADD CONSTRAINT [FK_to_source]
	FOREIGN KEY ([to_source]) REFERENCES [accounts] ([a_id]) ON DELETE Cascade ON UPDATE Cascade
GO
